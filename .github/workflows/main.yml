name: Python package

on: 
  push:
    branches: 
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]
    
    steps:
    # Install Ubuntu packages
    - name: Install db services
      run: sudo apt-get install libpq-dev
    # Set up Python env
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' 
        architecture: 'x64' 
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Cache pip packages
      id: cache-pip-pkgs
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      # if: steps.cache-pip-pkgs.outputs.cache-hit != 'true'
      run: pip install -r requirements.txt
    - name: Run Python tests
      run: |
        pytest
    # Set up npm env
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache npm pkgs
      id: cache-npm-pkgs
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install npm packages
      if: steps.cache-npm-pkgs.outputs.cache-hit != 'true'
      run: npm install
    - run: npm run build --if-present
    - run: npm test
      env:
        CI: true
